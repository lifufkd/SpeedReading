"""change table name

Revision ID: 7644ba60cb59
Revises: e4e4d6625c2a
Create Date: 2025-06-30 18:02:45.129086

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7644ba60cb59'
down_revision: Union[str, Sequence[str], None] = 'e4e4d6625c2a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_progress',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('exercise_id', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.Enum('NOT_STARTED', 'IN_PROGRESS', 'COMPLETED', name='users_progress_status_enum', create_constraint=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.exercise_id'], name=op.f('users_progress_status_exercise_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('users_progress_status_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'exercise_id', name=op.f('users_progress_status_pkey'))
    )
    op.drop_table('users_exercises_status')
    op.execute("DROP TYPE IF EXISTS users_exercises_status_status_enum")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_exercises_status',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('exercise_id', sa.BIGINT(), nullable=False),
    sa.Column('status', postgresql.ENUM('NOT_STARTED', 'IN_PROGRESS', 'COMPLETED', name='users_exercises_status_status_enum', create_constraint=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.exercise_id'], name=op.f('users_exercises_status_exercise_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('users_exercises_status_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'exercise_id', name=op.f('users_exercises_status_pkey'))
    )
    op.drop_table('users_progress')
    op.execute("DROP TYPE IF EXISTS users_progress_status_enum")
    # ### end Alembic commands ###
