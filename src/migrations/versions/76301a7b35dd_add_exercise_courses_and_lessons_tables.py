"""add 'exercise', 'courses' and 'lessons' tables

Revision ID: 76301a7b35dd
Revises: 2d97307e1931
Create Date: 2025-06-26 20:40:20.509070

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '76301a7b35dd'
down_revision: Union[str, Sequence[str], None] = '2d97307e1931'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('course_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_table('exercises',
    sa.Column('exercise_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('SCHULTE', 'DARKENED', 'EFFECTIVE', 'BLOCKS', 'TABLES', name='exercises_type_enum', create_constraint=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('exercise_id')
    )
    op.create_table('lessons',
    sa.Column('lesson_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('lesson_id')
    )
    op.create_table('exercises_courses',
    sa.Column('exercise_id', sa.BigInteger(), nullable=False),
    sa.Column('course_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.exercise_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('exercise_id', 'course_id')
    )
    op.create_table('exercises_lessons',
    sa.Column('exercise_id', sa.BigInteger(), nullable=False),
    sa.Column('lesson_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.exercise_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.lesson_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('exercise_id', 'lesson_id')
    )
    op.create_table('lessons_courses',
    sa.Column('lesson_id', sa.BigInteger(), nullable=False),
    sa.Column('course_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.lesson_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('lesson_id', 'course_id')
    )
    op.add_column('users', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_table('lessons_courses')
    op.drop_table('exercises_lessons')
    op.drop_table('exercises_courses')
    op.drop_table('lessons')
    op.drop_table('exercises')
    op.drop_table('courses')
    op.execute("DROP TYPE IF EXISTS exercises_type_enum")
    # ### end Alembic commands ###
