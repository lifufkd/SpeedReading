"""add 'users_exercises_status' and 'users_tasks' tables

Revision ID: 146b43232cab
Revises: 76301a7b35dd
Create Date: 2025-06-29 18:19:48.406978

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '146b43232cab'
down_revision: Union[str, Sequence[str], None] = '76301a7b35dd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_exercises_status',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('exercise_id', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.Enum('NOT_STARTED', 'IN_PROGRESS', 'COMPLETED', name='users_exercises_status_status_enum', create_constraint=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.exercise_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'exercise_id')
    )
    op.create_table('users_tasks',
    sa.Column('users_tasks_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False),
    sa.Column('task_type', sa.Enum('EXERCISE', 'LESSON', 'COURSE', name='users_tasks_task_type_enum', create_constraint=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('users_tasks_id'),
    sa.UniqueConstraint('user_id', 'task_id', 'task_type', name='users_tasks_user_id_task_id_task_type')
    )
    op.create_index(op.f('ix_users_tasks_user_id'), 'users_tasks', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_tasks_user_id'), table_name='users_tasks')
    op.drop_table('users_tasks')
    op.drop_table('users_exercises_status')
    op.execute("DROP TYPE IF EXISTS users_tasks_task_type_enum")
    op.execute("DROP TYPE IF EXISTS users_exercises_status_status_enum")
    # ### end Alembic commands ###
